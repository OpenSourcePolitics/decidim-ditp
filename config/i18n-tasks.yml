# i18n-tasks finds and manages missing and unused translations: https://github.com/glebm/i18n-tasks

# The "main" locale.
base_locale: en

## Reporting locale, default: en. Available: en, ru.
# internal_locale: en

# Read and write translations.
data:
  ## Translations are read from the file system. Supported format: YAML, JSON.
  ## Provide a custom adapter:
  # adapter: I18n::Tasks::Data::FileSystem

  # Locale files or `File.find` patterns where translations are read from:
  read:
    - config/locales/%{locale}.yml

  # Locale files to write new keys to, based on a list of key pattern => file rules. Matched from top to bottom:
  # `i18n-tasks normalize -p` will force move the keys according to these rules
  write:
    - config/locales/%{locale}.yml

  ## Specify the router (see Readme for details). Valid values: conservative_router, pattern_router, or a custom class.
  # router: convervative_router

  yaml:
    write:
      # do not wrap lines at 80 characters
      line_width: -1

  ## Pretty-print JSON:
  # json:
  #   write:
  #     indent: '  '
  #     space: ' '
  #     object_nl: "\n"
  #     array_nl: "\n"

# Find translate calls
search:
  ## Paths or `File.find` patterns to search in:
  paths:
    - app
    - lib

  # Root directories for relative keys resolution.
  relative_roots:
    - app/controllers
    - app/helpers
    - app/mailers
    - app/presenters
    - app/services
    - app/views
    - app/cells

  ## Files or `File.fnmatch` patterns to exclude from search. Some files are always excluded regardless of this setting:
  ##   %w(*.jpg *.png *.gif *.svg *.ico *.eot *.otf *.ttf *.woff *.woff2 *.pdf *.css *.sass *.scss *.less *.yml *.json)
  exclude:
    - "*.jpeg"
    - "*.odt"
    - "*.docx"

  ## Alternatively, the only files or `File.fnmatch patterns` to search in `paths`:
  ## If specified, this settings takes priority over `exclude`, but `exclude` still applies.
  # only: ["*.rb", "*.html.slim"]

  ## If `strict` is `false`, guess usages such as t("categories.#{category}.title"). The default is `true`.
  strict: false

  ## Multiple scanners can be used. Their results are merged.
  ## The options specified above are passed down to each scanner. Per-scanner options can be specified as well.
  ## See this example of a custom scanner: https://github.com/glebm/i18n-tasks/wiki/A-custom-scanner-example

## Google Translate
# translation:
#   # Get an API key and set billing info at https://code.google.com/apis/console to use Google Translate
#   api_key: "AbC-dEf5"

translation:
  deepl_api_key: <%= ENV["DEEPL_API_KEY"] %>

# Do not consider these keys missing:
ignore_missing:
 - faker.*

# Consider these keys used:
ignore_unused:
  - faker.*
  - activemodel.attributes.osp_authorization_handler.*
  - activemodel.attributes.participatory_process.private_space
  - decidim.accessibility.skip_button
  - decidim.authorization_handlers.osp_authorization_handler.*
  - decidim.authorization_handlers.osp_authorization_workflow.*
  - decidim.amendments.emendation.announcement.evaluating
  - decidim.events.budgets.pending_order.*
  - decidim.verifications.authorizations.first_login.actions.osp_authorization_handler
  - decidim.verifications.authorizations.first_login.actions.osp_authorization_workflow
  - layouts.decidim.user_menu.account
  - decidim.admin.reminders.create.*
  - decidim.admin.reminders.new.submit
  - decidim.anonymous_user
  - decidim.budgets.actions.*
  - decidim.budgets.admin.budgets.index.*
  - decidim.budgets.admin.models.budget.name
  - decidim.budgets.admin.reminders.orders.*
  - decidim.budgets.models.budget.fields.*
  - decidim.budgets.projects.count.projects_count.*
  - decidim.budgets.vote_reminder_mailer.vote_reminder.*
  - decidim.devise.sessions.new.sign_in_disabled
  - decidim.events.users.user_officialized.*
  - decidim.events.verifications.verify_with_managed_user.*
  - decidim.meetings.directory.meetings.index.all
  - decidim.meetings.meeting.not_allowed
  - decidim.meetings.meetings.create.*
  - decidim.meetings.meetings.update.*
  - decidim.omniauth.france_connect.explanation
  - decidim.omniauth.france_connect.external.*
  - decidim.omniauth.france_connect.forgot_password.ok_text
  - decidim.proposals.collaborative_drafts.collaborative_draft.publish.*
  - decidim.proposals.collaborative_drafts.collaborative_draft.withdraw.*
  - decidim.proposals.collaborative_drafts.create.error
  - decidim.proposals.collaborative_drafts.create.success
  - decidim.proposals.collaborative_drafts.edit.attachment_legend
  - decidim.proposals.collaborative_drafts.edit.select_a_category
  - decidim.proposals.collaborative_drafts.new.add_file
  - decidim.proposals.collaborative_drafts.new.edit_file
  - decidim.proposals.collaborative_drafts.show.*
  - decidim.proposals.collaborative_drafts.update.error
  - decidim.proposals.collaborative_drafts.update.success
  - decidim.proposals.collaborative_drafts.wizard_aside.back_from_collaborative_draft
  - decidim.proposals.collaborative_drafts.wizard_aside.info
  - decidim.proposals.index.collaborative_drafts_list
  - decidim.proposals.index.new_proposal
  - decidim.proposals.index.view_proposal
  - decidim.proposals.models.collaborative_draft.fields.*
  - decidim.shared.login_modal.close_modal
  - decidim.shared.login_modal.please_sign_in
  - decidim.shared.login_modal.sign_up
  - decidim.system.organizations.omniauth_settings.france_connect.*
  - decidim.system.organizations.omniauth_settings.france_connect_profile.*
  - decidim.system.organizations.omniauth_settings.france_connect_uid.*
  - decidim.system.organizations.omniauth_settings.publik.*
  - decidim.verifications.authorizations.create.error
  - decidim.verifications.authorizations.create.success
  - devise.passwords.new.forgot_your_password
  - devise.passwords.new.send_me_reset_password_instructions
  - devise.sessions.new.sign_in
  - devise.shared.links.forgot_your_password
  - devise.shared.links.sign_in_with_france_connect